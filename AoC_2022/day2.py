# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/day2.ipynb.

# %% auto 0
__all__ = ['win', 'lose', 'draw', 'MOVE_SCORES', 'OUTCOMES', 'RPS_CODE', 'WIN_MOVES', 'LOSE_MOVES', 'DRAW_MOVES', 'score_round',
           'score_strategy', 'rps_decode', 'get_plan']

# %% ../nbs/day2.ipynb 10
win, lose, draw = 6, 0, 3
MOVE_SCORES = {"R": 1, "P": 2, "S": 3}
OUTCOMES = {"RR": draw, "PP": draw, "SS": draw,
            "RP": win, "PS": win, "SR": win,
            "RS": lose, "SP": lose, "PR": lose}

def score_round(moves: str) -> int:
    my_move = moves[1]
    return MOVE_SCORES[my_move] + OUTCOMES[moves]

def score_strategy(strategy: list[str]) -> int:
    return sum(score_round(row) for row in strategy)

# %% ../nbs/day2.ipynb 17
RPS_CODE = str.maketrans("ABC", "RPS", " ")
WIN_MOVES = {"R": "P", "P":"S", "S":"R"}
LOSE_MOVES = {"R": "S", "P":"R", "S":"P"}
DRAW_MOVES = {"R": "R", "P":"P", "S":"S"}

def rps_decode(code: str) -> str:
    """Convert coded 'A X' type string to 'RS' type string. """
    opp_move, strat = str.translate(code, RPS_CODE)
    my_move = get_plan(strat)[opp_move]
    return f"{opp_move}{my_move}"

def get_plan(strat: str) -> dict:
    """Return dict of resposes for 1-letter strat"""
    if strat == "X": # lose
        return LOSE_MOVES
    elif strat == "Y": # draw
        return DRAW_MOVES
    return WIN_MOVES
    
